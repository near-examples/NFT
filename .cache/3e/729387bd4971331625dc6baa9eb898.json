{"id":"../node_modules/near-api-js/lib/utils/key_pair.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"tweetnacl","loc":{"line":7,"column":44},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/key_pair.js","resolved":"/Users/jelilat/codes/NFT/node_modules/tweetnacl/nacl-fast.js"},{"name":"./serialize","loc":{"line":8,"column":28},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/key_pair.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/serialize.js"},{"name":"./enums","loc":{"line":9,"column":24},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/key_pair.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/enums.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.KeyType = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst serialize_1 = require(\"./serialize\");\nconst enums_1 = require(\"./enums\");\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case KeyType.ED25519: return 'ed25519';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return KeyType.ED25519;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends enums_1.Assignable {\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new PublicKey({ keyType: KeyType.ED25519, data: serialize_1.base_decode(parts[0]) });\n        }\n        else if (parts.length === 2) {\n            return new PublicKey({ keyType: str_to_key_type(parts[0]), data: serialize_1.base_decode(parts[1]) });\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n    toString() {\n        return `${key_type_to_str(this.keyType)}:${serialize_1.base_encode(this.data)}`;\n    }\n}\nexports.PublicKey = PublicKey;\nclass KeyPair {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return KeyPairEd25519.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new KeyPairEd25519(parts[0]);\n        }\n        else if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new KeyPairEd25519(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends KeyPair {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} secretKey\n     */\n    constructor(secretKey) {\n        super();\n        const keyPair = tweetnacl_1.default.sign.keyPair.fromSecretKey(serialize_1.base_decode(secretKey));\n        this.publicKey = new PublicKey({ keyType: KeyType.ED25519, data: keyPair.publicKey });\n        this.secretKey = secretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const newKeyPair = tweetnacl_1.default.sign.keyPair();\n        return new KeyPairEd25519(serialize_1.base_encode(newKeyPair.secretKey));\n    }\n    sign(message) {\n        const signature = tweetnacl_1.default.sign.detached(message, serialize_1.base_decode(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return tweetnacl_1.default.sign.detached.verify(message, signature, this.publicKey.data);\n    }\n    toString() {\n        return `ed25519:${this.secretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/key_pair.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}}],"sources":{"../node_modules/near-api-js/lib/utils/key_pair.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.KeyType = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst serialize_1 = require(\"./serialize\");\nconst enums_1 = require(\"./enums\");\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case KeyType.ED25519: return 'ed25519';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return KeyType.ED25519;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends enums_1.Assignable {\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new PublicKey({ keyType: KeyType.ED25519, data: serialize_1.base_decode(parts[0]) });\n        }\n        else if (parts.length === 2) {\n            return new PublicKey({ keyType: str_to_key_type(parts[0]), data: serialize_1.base_decode(parts[1]) });\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n    toString() {\n        return `${key_type_to_str(this.keyType)}:${serialize_1.base_encode(this.data)}`;\n    }\n}\nexports.PublicKey = PublicKey;\nclass KeyPair {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return KeyPairEd25519.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 1) {\n            return new KeyPairEd25519(parts[0]);\n        }\n        else if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new KeyPairEd25519(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends KeyPair {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} secretKey\n     */\n    constructor(secretKey) {\n        super();\n        const keyPair = tweetnacl_1.default.sign.keyPair.fromSecretKey(serialize_1.base_decode(secretKey));\n        this.publicKey = new PublicKey({ keyType: KeyType.ED25519, data: keyPair.publicKey });\n        this.secretKey = secretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const newKeyPair = tweetnacl_1.default.sign.keyPair();\n        return new KeyPairEd25519(serialize_1.base_encode(newKeyPair.secretKey));\n    }\n    sign(message) {\n        const signature = tweetnacl_1.default.sign.detached(message, serialize_1.base_decode(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return tweetnacl_1.default.sign.detached.verify(message, signature, this.publicKey.data);\n    }\n    toString() {\n        return `ed25519:${this.secretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n"},"lineCount":127}},"error":null,"hash":"f37e3e5800b3d3c1a494be0fe33a1e32","cacheData":{"env":{}}}