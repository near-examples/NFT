{"id":"../node_modules/near-api-js/lib/account_creator.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"./utils/web","loc":{"line":4,"column":22},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_creator.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/web.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst web_1 = require(\"./utils/web\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await web_1.fetchJson(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/account_creator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}}],"sources":{"../node_modules/near-api-js/lib/account_creator.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst web_1 = require(\"./utils/web\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    async createAccount(newAccountId, publicKey) {\n        await web_1.fetchJson(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n"},"lineCount":46}},"error":null,"hash":"bb8c54cea19e16ba385efd6f6df3cfd9","cacheData":{"env":{}}}