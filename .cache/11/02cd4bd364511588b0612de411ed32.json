{"id":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"depd","loc":{"line":12,"column":39},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/jelilat/codes/NFT/node_modules/depd/lib/browser/index.js"},{"name":"./provider","loc":{"line":13,"column":27},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/provider.js"},{"name":"../utils/web","loc":{"line":14,"column":22},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/web.js"},{"name":"../utils/errors","loc":{"line":15,"column":25},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/errors.js"},{"name":"borsh","loc":{"line":18,"column":24},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/jelilat/codes/NFT/node_modules/borsh/lib/index.js"},{"name":"../utils/exponential-backoff","loc":{"line":19,"column":54},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/exponential-backoff.js"},{"name":"../utils/rpc_errors","loc":{"line":20,"column":29},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/rpc_errors.js"},{"name":"buffer","parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/json-rpc-provider.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.ErrorContext = exports.TypedError = void 0;\n/**\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the NEAR RPC API.\n * @see {@link providers/provider} for a list of request and response types\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return errors_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return errors_1.ErrorContext; } });\nconst borsh_1 = require(\"borsh\");\nconst exponential_backoff_1 = __importDefault(require(\"../utils/exponential-backoff\"));\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the NEAR RPC API.\n * @see {@link https://github.com/near/nearcore/tree/master/chain/jsonrpc}\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param url RPC API endpoint URL\n     */\n    constructor(url) {\n        super();\n        this.connection = { url };\n    }\n    /**\n     * Gets the RPC's status\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#general-validator-status}\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await}\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_async', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#transaction-status}\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    async txStatus(txHash, accountId) {\n        if (typeof txHash === 'string') {\n            return this.txStatusString(txHash, accountId);\n        }\n        else {\n            return this.txStatusUint8Array(txHash, accountId);\n        }\n    }\n    async txStatusUint8Array(txHash, accountId) {\n        return this.sendJsonRpc('tx', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    async txStatusString(txHash, accountId) {\n        return this.sendJsonRpc('tx', [txHash, accountId]);\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId) {\n        return this.sendJsonRpc('EXPERIMENTAL_tx_status', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts)\n     * Query the RPC by passing an {@link RpcQueryRequest}\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts}\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    async query(...args) {\n        let result;\n        if (args.length === 1) {\n            result = await this.sendJsonRpc('query', args[0]);\n        }\n        else {\n            const [path, data] = args;\n            result = await this.sendJsonRpc('query', [path, data]);\n        }\n        if (result && result.error) {\n            throw new errors_1.TypedError(`Querying ${args} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, rpc_errors_1.getErrorTypeFromErrorMessage(result.error));\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see {@link https://docs.near.org/docs/interaction/rpc#block}\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        let { blockId } = blockQuery;\n        if (typeof blockQuery !== 'object') {\n            const deprecate = depd_1.default('JsonRpcProvider.block(blockId)');\n            deprecate('use `block({ blockId })` or `block({ finality })` instead');\n            blockId = blockQuery;\n        }\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#block-details)\n     */\n    async blockChanges(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see {@link https://docs.near.org/docs/interaction/rpc#chunk}\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#detailed-validator-status}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * @deprecated\n     * Gets the genesis config from RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#genesis-config}\n     */\n    async experimental_genesisConfig() {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_protocolConfig()');\n        deprecate('use `experimental_protocolConfig({ sync_checkpoint: \\'genesis\\' })` to fetch the up-to-date or genesis protocol config explicitly');\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', { sync_checkpoint: 'genesis' });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     * @see {@link }\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', blockReference);\n    }\n    /**\n     * @deprecated Use {@link lightClientProof} instead\n     */\n    async experimental_lightClientProof(request) {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');\n        deprecate('use `lightClientProof` instead');\n        return await this.lightClientProof(request);\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see {@link https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof}\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'all_access_key_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'single_access_key_changes',\n            keys: accessKeyArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'account_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'data_changes',\n            account_ids: accountIdArray,\n            key_prefix_base64: keyPrefix,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'contract_code_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#gas-price}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return await this.sendJsonRpc('gas_price', [blockId]);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const response = await exponential_backoff_1.default(REQUEST_RETRY_WAIT, REQUEST_RETRY_NUMBER, REQUEST_RETRY_WAIT_BACKOFF, async () => {\n            try {\n                const request = {\n                    method,\n                    params,\n                    id: (_nextId++),\n                    jsonrpc: '2.0'\n                };\n                const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n                if (response.error) {\n                    if (typeof response.error.data === 'object') {\n                        if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                            throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                        }\n                        throw rpc_errors_1.parseRpcError(response.error.data);\n                    }\n                    else {\n                        const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                        // NOTE: All this hackery is happening because structured errors not implemented\n                        // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                        if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                            || errorMessage.includes('query has timed out')) {\n                            throw new errors_1.TypedError(errorMessage, 'TimeoutError');\n                        }\n                        throw new errors_1.TypedError(errorMessage, rpc_errors_1.getErrorTypeFromErrorMessage(response.error.data));\n                    }\n                }\n                // Success when response.error is not exist\n                return response;\n            }\n            catch (error) {\n                if (error.type === 'TimeoutError') {\n                    console.warn(`Retrying request to ${method} as it has timed out`, params);\n                    return null;\n                }\n                throw error;\n            }\n        });\n        const { result } = response;\n        // From jsonrpc spec:\n        // result\n        //   This member is REQUIRED on success.\n        //   This member MUST NOT exist if there was an error invoking the method.\n        if (typeof result === 'undefined') {\n            throw new errors_1.TypedError(`Exceeded ${REQUEST_RETRY_NUMBER} attempts for request to ${method}.`, 'RetriesExceeded');\n        }\n        return result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/near-api-js/lib/providers/json-rpc-provider.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}}],"sources":{"../node_modules/near-api-js/lib/providers/json-rpc-provider.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = exports.ErrorContext = exports.TypedError = void 0;\n/**\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the NEAR RPC API.\n * @see {@link providers/provider} for a list of request and response types\n */\nconst depd_1 = __importDefault(require(\"depd\"));\nconst provider_1 = require(\"./provider\");\nconst web_1 = require(\"../utils/web\");\nconst errors_1 = require(\"../utils/errors\");\nObject.defineProperty(exports, \"TypedError\", { enumerable: true, get: function () { return errors_1.TypedError; } });\nObject.defineProperty(exports, \"ErrorContext\", { enumerable: true, get: function () { return errors_1.ErrorContext; } });\nconst borsh_1 = require(\"borsh\");\nconst exponential_backoff_1 = __importDefault(require(\"../utils/exponential-backoff\"));\nconst rpc_errors_1 = require(\"../utils/rpc_errors\");\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the NEAR RPC API.\n * @see {@link https://github.com/near/nearcore/tree/master/chain/jsonrpc}\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param url RPC API endpoint URL\n     */\n    constructor(url) {\n        super();\n        this.connection = { url };\n    }\n    /**\n     * Gets the RPC's status\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#general-validator-status}\n     */\n    async status() {\n        return this.sendJsonRpc('status', []);\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await}\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    async sendTransaction(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async sendTransactionAsync(signedTransaction) {\n        const bytes = signedTransaction.encode();\n        return this.sendJsonRpc('broadcast_tx_async', [Buffer.from(bytes).toString('base64')]);\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#transaction-status}\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    async txStatus(txHash, accountId) {\n        if (typeof txHash === 'string') {\n            return this.txStatusString(txHash, accountId);\n        }\n        else {\n            return this.txStatusUint8Array(txHash, accountId);\n        }\n    }\n    async txStatusUint8Array(txHash, accountId) {\n        return this.sendJsonRpc('tx', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    async txStatusString(txHash, accountId) {\n        return this.sendJsonRpc('tx', [txHash, accountId]);\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    async txStatusReceipts(txHash, accountId) {\n        return this.sendJsonRpc('EXPERIMENTAL_tx_status', [borsh_1.baseEncode(txHash), accountId]);\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts)\n     * Query the RPC by passing an {@link RpcQueryRequest}\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts}\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    async query(...args) {\n        let result;\n        if (args.length === 1) {\n            result = await this.sendJsonRpc('query', args[0]);\n        }\n        else {\n            const [path, data] = args;\n            result = await this.sendJsonRpc('query', [path, data]);\n        }\n        if (result && result.error) {\n            throw new errors_1.TypedError(`Querying ${args} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, rpc_errors_1.getErrorTypeFromErrorMessage(result.error));\n        }\n        return result;\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see {@link https://docs.near.org/docs/interaction/rpc#block}\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    async block(blockQuery) {\n        const { finality } = blockQuery;\n        let { blockId } = blockQuery;\n        if (typeof blockQuery !== 'object') {\n            const deprecate = depd_1.default('JsonRpcProvider.block(blockId)');\n            deprecate('use `block({ blockId })` or `block({ finality })` instead');\n            blockId = blockQuery;\n        }\n        return this.sendJsonRpc('block', { block_id: blockId, finality });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#block-details)\n     */\n    async blockChanges(blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see {@link https://docs.near.org/docs/interaction/rpc#chunk}\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    async chunk(chunkId) {\n        return this.sendJsonRpc('chunk', [chunkId]);\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#detailed-validator-status}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async validators(blockId) {\n        return this.sendJsonRpc('validators', [blockId]);\n    }\n    /**\n     * @deprecated\n     * Gets the genesis config from RPC\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#genesis-config}\n     */\n    async experimental_genesisConfig() {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_protocolConfig()');\n        deprecate('use `experimental_protocolConfig({ sync_checkpoint: \\'genesis\\' })` to fetch the up-to-date or genesis protocol config explicitly');\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', { sync_checkpoint: 'genesis' });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     * @see {@link }\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    async experimental_protocolConfig(blockReference) {\n        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', blockReference);\n    }\n    /**\n     * @deprecated Use {@link lightClientProof} instead\n     */\n    async experimental_lightClientProof(request) {\n        const deprecate = depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');\n        deprecate('use `lightClientProof` instead');\n        return await this.lightClientProof(request);\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see {@link https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof}\n     */\n    async lightClientProof(request) {\n        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accessKeyChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'all_access_key_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    async singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'single_access_key_changes',\n            keys: accessKeyArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async accountChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'account_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'data_changes',\n            account_ids: accountIdArray,\n            key_prefix_base64: keyPrefix,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    async contractCodeChanges(accountIdArray, blockQuery) {\n        const { finality } = blockQuery;\n        const { blockId } = blockQuery;\n        return this.sendJsonRpc('EXPERIMENTAL_changes', {\n            changes_type: 'contract_code_changes',\n            account_ids: accountIdArray,\n            block_id: blockId,\n            finality\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#gas-price}\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    async gasPrice(blockId) {\n        return await this.sendJsonRpc('gas_price', [blockId]);\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    async sendJsonRpc(method, params) {\n        const response = await exponential_backoff_1.default(REQUEST_RETRY_WAIT, REQUEST_RETRY_NUMBER, REQUEST_RETRY_WAIT_BACKOFF, async () => {\n            try {\n                const request = {\n                    method,\n                    params,\n                    id: (_nextId++),\n                    jsonrpc: '2.0'\n                };\n                const response = await web_1.fetchJson(this.connection, JSON.stringify(request));\n                if (response.error) {\n                    if (typeof response.error.data === 'object') {\n                        if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                            // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                            throw new errors_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                        }\n                        throw rpc_errors_1.parseRpcError(response.error.data);\n                    }\n                    else {\n                        const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                        // NOTE: All this hackery is happening because structured errors not implemented\n                        // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                        if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                            || errorMessage.includes('query has timed out')) {\n                            throw new errors_1.TypedError(errorMessage, 'TimeoutError');\n                        }\n                        throw new errors_1.TypedError(errorMessage, rpc_errors_1.getErrorTypeFromErrorMessage(response.error.data));\n                    }\n                }\n                // Success when response.error is not exist\n                return response;\n            }\n            catch (error) {\n                if (error.type === 'TimeoutError') {\n                    console.warn(`Retrying request to ${method} as it has timed out`, params);\n                    return null;\n                }\n                throw error;\n            }\n        });\n        const { result } = response;\n        // From jsonrpc spec:\n        // result\n        //   This member is REQUIRED on success.\n        //   This member MUST NOT exist if there was an error invoking the method.\n        if (typeof result === 'undefined') {\n            throw new errors_1.TypedError(`Exceeded ${REQUEST_RETRY_NUMBER} attempts for request to ${method}.`, 'RetriesExceeded');\n        }\n        return result;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n"},"lineCount":349}},"error":null,"hash":"99c07a35108a27991775adf4b5c6e9d9","cacheData":{"env":{}}}