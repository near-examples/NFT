{"id":"../node_modules/borsh/lib/index.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/borsh/package.json","includedInParent":true,"mtime":1649759770709},{"name":"bn.js","loc":{"line":32,"column":40},"parent":"/Users/jelilat/codes/NFT/node_modules/borsh/lib/index.js","resolved":"/Users/jelilat/codes/NFT/node_modules/bn.js/lib/bn.js"},{"name":"bs58","loc":{"line":33,"column":39},"parent":"/Users/jelilat/codes/NFT/node_modules/borsh/lib/index.js","resolved":"/Users/jelilat/codes/NFT/node_modules/bs58/index.js"},{"name":"text-encoding-utf-8","loc":{"line":35,"column":38},"parent":"/Users/jelilat/codes/NFT/node_modules/borsh/lib/index.js","resolved":"/Users/jelilat/codes/NFT/node_modules/text-encoding-utf-8/lib/encoding.lib.js"},{"name":"buffer","parent":"/Users/jelilat/codes/NFT/node_modules/borsh/lib/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var global = arguments[3];\nvar Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === 'number') {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === 'function') {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === 'number') {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === 'function') {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/borsh/lib/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/borsh/lib/index.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}}],"sources":{"../node_modules/borsh/lib/index.js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === 'number') {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === 'function') {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === 'number') {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === 'function') {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n"},"lineCount":418}},"error":null,"hash":"50700304f2007c65b6269e0c42b2a09c","cacheData":{"env":{}}}