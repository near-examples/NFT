{"id":"../node_modules/near-api-js/lib/utils/format.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"bn.js","loc":{"line":7,"column":40},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/format.js","resolved":"/Users/jelilat/codes/NFT/node_modules/bn.js/lib/bn.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = new bn_js_1.default('10', 10).pow(new bn_js_1.default(exports.NEAR_NOMINATION_EXP, 10));\n// Pre-calculate offests used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = new bn_js_1.default(10);\nfor (let i = 0, offset = new bn_js_1.default(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset.mul(BN10)) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    const balanceBN = new bn_js_1.default(balance, 10);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN.iadd(ROUNDING_OFFSETS[roundingExp]);\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || '0';\n    const fractionStr = balance.substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, '0').substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split('.');\n    const wholePart = split[0];\n    const fracPart = split[1] || '';\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, '0'));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, '').trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, '');\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, '');\n    if (value === '') {\n        return '0';\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, '$1,$2');\n    }\n    return value;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/format.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}}],"sources":{"../node_modules/near-api-js/lib/utils/format.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = new bn_js_1.default('10', 10).pow(new bn_js_1.default(exports.NEAR_NOMINATION_EXP, 10));\n// Pre-calculate offests used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = new bn_js_1.default(10);\nfor (let i = 0, offset = new bn_js_1.default(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset.mul(BN10)) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    const balanceBN = new bn_js_1.default(balance, 10);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN.iadd(ROUNDING_OFFSETS[roundingExp]);\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || '0';\n    const fractionStr = balance.substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, '0').substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split('.');\n    const wholePart = split[0];\n    const fracPart = split[1] || '';\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, '0'));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, '').trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, '');\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, '');\n    if (value === '') {\n        return '0';\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, '$1,$2');\n    }\n    return value;\n}\n"},"lineCount":107}},"error":null,"hash":"e32a5f5c236a0c75abeb1d8773e92c8e","cacheData":{"env":{}}}