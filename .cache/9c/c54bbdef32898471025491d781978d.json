{"id":"../node_modules/near-api-js/lib/account_multisig.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"bn.js","loc":{"line":7,"column":40},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/Users/jelilat/codes/NFT/node_modules/bn.js/lib/bn.js"},{"name":"depd","loc":{"line":8,"column":39},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/Users/jelilat/codes/NFT/node_modules/depd/lib/browser/index.js"},{"name":"./account","loc":{"line":9,"column":26},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account.js"},{"name":"./utils/format","loc":{"line":10,"column":25},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/format.js"},{"name":"./utils/key_pair","loc":{"line":11,"column":27},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/key_pair.js"},{"name":"./transaction","loc":{"line":12,"column":30},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/transaction.js"},{"name":"./utils/web","loc":{"line":13,"column":22},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/web.js"},{"name":"buffer","parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/account_multisig.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account2FA = exports.AccountMultisig = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst format_1 = require(\"./utils/format\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst transaction_1 = require(\"./transaction\");\nconst web_1 = require(\"./utils/web\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = new bn_js_1.default(format_1.parseNearAmount('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = new bn_js_1.default('100000000000000');\nexports.MULTISIG_DEPOSIT = new bn_js_1.default('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [exports.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    async signAndSendTransactionWithAccount(receiverId, actions) {\n        return super.signAndSendTransaction({ receiverId, actions });\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions }) {\n        const { accountId } = this;\n        const args = Buffer.from(JSON.stringify({\n            request: {\n                receiver_id: receiverId,\n                actions: convertActions(actions, accountId, receiverId)\n            }\n        }));\n        let result;\n        try {\n            result = await super.signAndSendTransaction({\n                receiverId: accountId,\n                actions: [\n                    transaction_1.functionCall('add_request_and_confirm', args, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)\n                ]\n            });\n        }\n        catch (e) {\n            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                await this.deleteUnconfirmedRequests();\n                return await this.signAndSendTransaction(receiverId, actions);\n            }\n            throw e;\n        }\n        // TODO: Are following even needed? Seems like it throws on error already\n        if (!result.status) {\n            throw new Error('Request failed');\n        }\n        const status = { ...result.status };\n        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n            throw new Error('Request failed');\n        }\n        this.setRequest({\n            accountId,\n            actions,\n            requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n        });\n        if (this.onAddRequestResult) {\n            await this.onAddRequestResult(result);\n        }\n        // NOTE there is no await on purpose to avoid blocking for 2fa\n        this.deleteUnconfirmedRequests();\n        return result;\n    }\n    async deleteUnconfirmedRequests() {\n        // TODO: Delete in batch, don't delete unexpired\n        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n        const request_ids = await this.getRequestIds();\n        const { requestId } = this.getRequest();\n        for (const requestIdToDelete of request_ids) {\n            if (requestIdToDelete == requestId) {\n                continue;\n            }\n            try {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId,\n                    actions: [transaction_1.functionCall('delete_request', { request_id: requestIdToDelete }, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)]\n                });\n            }\n            catch (e) {\n                console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n            }\n        }\n    }\n    // helpers\n    async getRequestIds() {\n        // TODO: Read requests from state to allow filtering by expiration time\n        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n        return this.viewFunction(this.accountId, 'list_request_ids');\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(exports.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[exports.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(exports.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[exports.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nclass Account2FA extends AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    async signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n            deprecate('use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n            return this.__signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        else {\n            return this.__signAndSendTransaction(args[0]);\n        }\n    }\n    async __signAndSendTransaction({ receiverId, actions }) {\n        await super.signAndSendTransaction({ receiverId, actions });\n        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n        await this.sendCode();\n        const result = await this.promptAndVerify();\n        if (this.onConfirmResult) {\n            await this.onConfirmResult(result);\n        }\n        return result;\n    }\n    // default helpers for CH deployments of multisig\n    async deployMultisig(contractBytes) {\n        const { accountId } = this;\n        const seedOrLedgerKey = (await this.getRecoveryMethods()).data\n            .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n            .map((rm) => rm.publicKey);\n        const fak2lak = (await this.getAccessKeys())\n            .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n            .map((ak) => ak.public_key)\n            .map(toPK);\n        const confirmOnlyKey = toPK((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n        const actions = [\n            ...fak2lak.map((pk) => transaction_1.deleteKey(pk)),\n            ...fak2lak.map((pk) => transaction_1.addKey(pk, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CHANGE_METHODS, null))),\n            transaction_1.addKey(confirmOnlyKey, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CONFIRM_METHODS, null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        if ((await this.state()).code_hash === '11111111111111111111111111111111') {\n            actions.push(transaction_1.functionCall('new', newArgs, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT));\n        }\n        console.log('deploying multisig contract for', accountId);\n        return await super.signAndSendTransactionWithAccount(accountId, actions);\n    }\n    async disable(contractBytes) {\n        const { accountId } = this;\n        const accessKeys = await this.getAccessKeys();\n        const lak2fak = accessKeys\n            .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n            .filter(({ access_key }) => {\n            const perm = access_key.permission.FunctionCall;\n            return perm.receiver_id === accountId &&\n                perm.method_names.length === 4 &&\n                perm.method_names.includes('add_request_and_confirm');\n        });\n        const confirmOnlyKey = key_pair_1.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const actions = [\n            transaction_1.deleteKey(confirmOnlyKey),\n            ...lak2fak.map(({ public_key }) => transaction_1.deleteKey(key_pair_1.PublicKey.from(public_key))),\n            ...lak2fak.map(({ public_key }) => transaction_1.addKey(key_pair_1.PublicKey.from(public_key), null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        console.log('disabling 2fa for', accountId);\n        return await this.signAndSendTransaction({\n            receiverId: accountId,\n            actions\n        });\n    }\n    async sendCodeDefault() {\n        const { accountId } = this;\n        const { requestId } = this.getRequest();\n        const method = await this.get2faMethod();\n        await this.postSignedJson('/2fa/send', {\n            accountId,\n            method,\n            requestId,\n        });\n        return requestId;\n    }\n    async getCodeDefault(method) {\n        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n    }\n    async promptAndVerify() {\n        const method = await this.get2faMethod();\n        const securityCode = await this.getCode(method);\n        try {\n            const result = await this.verifyCode(securityCode);\n            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n            return result;\n        }\n        catch (e) {\n            console.warn('Error validating security code:', e);\n            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                return await this.promptAndVerify();\n            }\n            throw e;\n        }\n    }\n    async verifyCodeDefault(securityCode) {\n        const { accountId } = this;\n        const request = this.getRequest();\n        if (!request) {\n            throw new Error('no request pending');\n        }\n        const { requestId } = request;\n        return await this.postSignedJson('/2fa/verify', {\n            accountId,\n            securityCode,\n            requestId\n        });\n    }\n    async getRecoveryMethods() {\n        const { accountId } = this;\n        return {\n            accountId,\n            data: await this.postSignedJson('/account/recoveryMethods', { accountId })\n        };\n    }\n    async get2faMethod() {\n        let { data } = await this.getRecoveryMethods();\n        if (data && data.length) {\n            data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n        }\n        if (!data)\n            return null;\n        const { kind, detail } = data;\n        return { kind, detail };\n    }\n    async signatureFor() {\n        const { accountId } = this;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockNumber = block.header.height.toString();\n        const signed = await this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n        const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n        return { blockNumber, blockNumberSignature };\n    }\n    async postSignedJson(path, body) {\n        return await web_1.fetchJson(this.helperUrl + path, JSON.stringify({\n            ...body,\n            ...(await this.signatureFor())\n        }));\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => key_pair_1.PublicKey.from(pk);\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: exports.MULTISIG_ALLOWANCE.toString(),\n                method_names: exports.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/near-api-js/lib/account_multisig.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}}],"sources":{"../node_modules/near-api-js/lib/account_multisig.js":"'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account2FA = exports.AccountMultisig = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst account_1 = require(\"./account\");\nconst format_1 = require(\"./utils/format\");\nconst key_pair_1 = require(\"./utils/key_pair\");\nconst transaction_1 = require(\"./transaction\");\nconst web_1 = require(\"./utils/web\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = new bn_js_1.default(format_1.parseNearAmount('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = new bn_js_1.default('100000000000000');\nexports.MULTISIG_DEPOSIT = new bn_js_1.default('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [exports.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    async signAndSendTransactionWithAccount(receiverId, actions) {\n        return super.signAndSendTransaction({ receiverId, actions });\n    }\n    signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            return this._signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        return this._signAndSendTransaction(args[0]);\n    }\n    async _signAndSendTransaction({ receiverId, actions }) {\n        const { accountId } = this;\n        const args = Buffer.from(JSON.stringify({\n            request: {\n                receiver_id: receiverId,\n                actions: convertActions(actions, accountId, receiverId)\n            }\n        }));\n        let result;\n        try {\n            result = await super.signAndSendTransaction({\n                receiverId: accountId,\n                actions: [\n                    transaction_1.functionCall('add_request_and_confirm', args, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)\n                ]\n            });\n        }\n        catch (e) {\n            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                await this.deleteUnconfirmedRequests();\n                return await this.signAndSendTransaction(receiverId, actions);\n            }\n            throw e;\n        }\n        // TODO: Are following even needed? Seems like it throws on error already\n        if (!result.status) {\n            throw new Error('Request failed');\n        }\n        const status = { ...result.status };\n        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n            throw new Error('Request failed');\n        }\n        this.setRequest({\n            accountId,\n            actions,\n            requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n        });\n        if (this.onAddRequestResult) {\n            await this.onAddRequestResult(result);\n        }\n        // NOTE there is no await on purpose to avoid blocking for 2fa\n        this.deleteUnconfirmedRequests();\n        return result;\n    }\n    async deleteUnconfirmedRequests() {\n        // TODO: Delete in batch, don't delete unexpired\n        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n        const request_ids = await this.getRequestIds();\n        const { requestId } = this.getRequest();\n        for (const requestIdToDelete of request_ids) {\n            if (requestIdToDelete == requestId) {\n                continue;\n            }\n            try {\n                await super.signAndSendTransaction({\n                    receiverId: this.accountId,\n                    actions: [transaction_1.functionCall('delete_request', { request_id: requestIdToDelete }, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT)]\n                });\n            }\n            catch (e) {\n                console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n            }\n        }\n    }\n    // helpers\n    async getRequestIds() {\n        // TODO: Read requests from state to allow filtering by expiration time\n        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n        return this.viewFunction(this.accountId, 'list_request_ids');\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(exports.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[exports.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(exports.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[exports.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nclass Account2FA extends AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    async signAndSendTransaction(...args) {\n        if (typeof args[0] === 'string') {\n            const deprecate = depd_1.default('Account.signAndSendTransaction(receiverId, actions');\n            deprecate('use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead');\n            return this.__signAndSendTransaction({ receiverId: args[0], actions: args[1] });\n        }\n        else {\n            return this.__signAndSendTransaction(args[0]);\n        }\n    }\n    async __signAndSendTransaction({ receiverId, actions }) {\n        await super.signAndSendTransaction({ receiverId, actions });\n        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n        await this.sendCode();\n        const result = await this.promptAndVerify();\n        if (this.onConfirmResult) {\n            await this.onConfirmResult(result);\n        }\n        return result;\n    }\n    // default helpers for CH deployments of multisig\n    async deployMultisig(contractBytes) {\n        const { accountId } = this;\n        const seedOrLedgerKey = (await this.getRecoveryMethods()).data\n            .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n            .map((rm) => rm.publicKey);\n        const fak2lak = (await this.getAccessKeys())\n            .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n            .map((ak) => ak.public_key)\n            .map(toPK);\n        const confirmOnlyKey = toPK((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n        const actions = [\n            ...fak2lak.map((pk) => transaction_1.deleteKey(pk)),\n            ...fak2lak.map((pk) => transaction_1.addKey(pk, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CHANGE_METHODS, null))),\n            transaction_1.addKey(confirmOnlyKey, transaction_1.functionCallAccessKey(accountId, exports.MULTISIG_CONFIRM_METHODS, null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        if ((await this.state()).code_hash === '11111111111111111111111111111111') {\n            actions.push(transaction_1.functionCall('new', newArgs, exports.MULTISIG_GAS, exports.MULTISIG_DEPOSIT));\n        }\n        console.log('deploying multisig contract for', accountId);\n        return await super.signAndSendTransactionWithAccount(accountId, actions);\n    }\n    async disable(contractBytes) {\n        const { accountId } = this;\n        const accessKeys = await this.getAccessKeys();\n        const lak2fak = accessKeys\n            .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n            .filter(({ access_key }) => {\n            const perm = access_key.permission.FunctionCall;\n            return perm.receiver_id === accountId &&\n                perm.method_names.length === 4 &&\n                perm.method_names.includes('add_request_and_confirm');\n        });\n        const confirmOnlyKey = key_pair_1.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n        const actions = [\n            transaction_1.deleteKey(confirmOnlyKey),\n            ...lak2fak.map(({ public_key }) => transaction_1.deleteKey(key_pair_1.PublicKey.from(public_key))),\n            ...lak2fak.map(({ public_key }) => transaction_1.addKey(key_pair_1.PublicKey.from(public_key), null)),\n            transaction_1.deployContract(contractBytes),\n        ];\n        console.log('disabling 2fa for', accountId);\n        return await this.signAndSendTransaction({\n            receiverId: accountId,\n            actions\n        });\n    }\n    async sendCodeDefault() {\n        const { accountId } = this;\n        const { requestId } = this.getRequest();\n        const method = await this.get2faMethod();\n        await this.postSignedJson('/2fa/send', {\n            accountId,\n            method,\n            requestId,\n        });\n        return requestId;\n    }\n    async getCodeDefault(method) {\n        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n    }\n    async promptAndVerify() {\n        const method = await this.get2faMethod();\n        const securityCode = await this.getCode(method);\n        try {\n            const result = await this.verifyCode(securityCode);\n            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n            return result;\n        }\n        catch (e) {\n            console.warn('Error validating security code:', e);\n            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                return await this.promptAndVerify();\n            }\n            throw e;\n        }\n    }\n    async verifyCodeDefault(securityCode) {\n        const { accountId } = this;\n        const request = this.getRequest();\n        if (!request) {\n            throw new Error('no request pending');\n        }\n        const { requestId } = request;\n        return await this.postSignedJson('/2fa/verify', {\n            accountId,\n            securityCode,\n            requestId\n        });\n    }\n    async getRecoveryMethods() {\n        const { accountId } = this;\n        return {\n            accountId,\n            data: await this.postSignedJson('/account/recoveryMethods', { accountId })\n        };\n    }\n    async get2faMethod() {\n        let { data } = await this.getRecoveryMethods();\n        if (data && data.length) {\n            data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n        }\n        if (!data)\n            return null;\n        const { kind, detail } = data;\n        return { kind, detail };\n    }\n    async signatureFor() {\n        const { accountId } = this;\n        const block = await this.connection.provider.block({ finality: 'final' });\n        const blockNumber = block.header.height.toString();\n        const signed = await this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n        const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n        return { blockNumber, blockNumberSignature };\n    }\n    async postSignedJson(path, body) {\n        return await web_1.fetchJson(this.helperUrl + path, JSON.stringify({\n            ...body,\n            ...(await this.signatureFor())\n        }));\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => key_pair_1.PublicKey.from(pk);\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: exports.MULTISIG_ALLOWANCE.toString(),\n                method_names: exports.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n"},"lineCount":316}},"error":null,"hash":"52d66e62c0d1d3b744bf964e72c91263","cacheData":{"env":{}}}