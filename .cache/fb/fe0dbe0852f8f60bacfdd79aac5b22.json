{"id":"../node_modules/near-api-js/lib/connection.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"./providers","loc":{"line":4,"column":28},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/connection.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/index.js"},{"name":"./signer","loc":{"line":5,"column":25},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/connection.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/signer.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst providers_1 = require(\"./providers\");\nconst signer_1 = require(\"./signer\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider(config.args.url);\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signer_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer);\n    }\n}\nexports.Connection = Connection;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/connection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"../node_modules/near-api-js/lib/connection.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nconst providers_1 = require(\"./providers\");\nconst signer_1 = require(\"./signer\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider(config.args.url);\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signer_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer);\n    }\n}\nexports.Connection = Connection;\n"},"lineCount":51}},"error":null,"hash":"8f1302276a49e134f5a84eaef2a7aff8","cacheData":{"env":{}}}