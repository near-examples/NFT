{"id":"../node_modules/capability/lib/CapabilityDetector.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/capability/package.json","includedInParent":true,"mtime":1649759770575}],"generated":{"js":"var CapabilityDetector = function () {\r\n    this.tests = {};\r\n    this.cache = {};\r\n};\r\nCapabilityDetector.prototype = {\r\n    constructor: CapabilityDetector,\r\n    define: function (name, test) {\r\n        if (typeof (name) != \"string\" || !(test instanceof Function))\r\n            throw new Error(\"Invalid capability definition.\");\r\n        if (this.tests[name])\r\n            throw new Error('Duplicated capability definition by \"' + name + '\".');\r\n        this.tests[name] = test;\r\n    },\r\n    check: function (name) {\r\n        if (!this.test(name))\r\n            throw new Error('The current environment does not support \"' + name + '\", therefore we cannot continue.');\r\n    },\r\n    test: function (name) {\r\n        if (this.cache[name] !== undefined)\r\n            return this.cache[name];\r\n        if (!this.tests[name])\r\n            throw new Error('Unknown capability with name \"' + name + '\".');\r\n        var test = this.tests[name];\r\n        this.cache[name] = !!test();\r\n        return this.cache[name];\r\n    }\r\n};\r\n\r\nmodule.exports = CapabilityDetector;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/capability/lib/CapabilityDetector.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../node_modules/capability/lib/CapabilityDetector.js":"var CapabilityDetector = function () {\r\n    this.tests = {};\r\n    this.cache = {};\r\n};\r\nCapabilityDetector.prototype = {\r\n    constructor: CapabilityDetector,\r\n    define: function (name, test) {\r\n        if (typeof (name) != \"string\" || !(test instanceof Function))\r\n            throw new Error(\"Invalid capability definition.\");\r\n        if (this.tests[name])\r\n            throw new Error('Duplicated capability definition by \"' + name + '\".');\r\n        this.tests[name] = test;\r\n    },\r\n    check: function (name) {\r\n        if (!this.test(name))\r\n            throw new Error('The current environment does not support \"' + name + '\", therefore we cannot continue.');\r\n    },\r\n    test: function (name) {\r\n        if (this.cache[name] !== undefined)\r\n            return this.cache[name];\r\n        if (!this.tests[name])\r\n            throw new Error('Unknown capability with name \"' + name + '\".');\r\n        var test = this.tests[name];\r\n        this.cache[name] = !!test();\r\n        return this.cache[name];\r\n    }\r\n};\r\n\r\nmodule.exports = CapabilityDetector;"},"lineCount":29}},"error":null,"hash":"b4f4c40062ea2453e34948902db29815","cacheData":{"env":{}}}