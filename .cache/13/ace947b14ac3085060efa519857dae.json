{"id":"../node_modules/near-api-js/lib/contract.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"bn.js","loc":{"line":7,"column":40},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/contract.js","resolved":"/Users/jelilat/codes/NFT/node_modules/bn.js/lib/bn.js"},{"name":"depd","loc":{"line":8,"column":39},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/contract.js","resolved":"/Users/jelilat/codes/NFT/node_modules/depd/lib/browser/index.js"},{"name":"./providers","loc":{"line":9,"column":28},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/contract.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/providers/index.js"},{"name":"./utils/errors","loc":{"line":10,"column":25},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/contract.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/errors.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                })\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (...args) => {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod({ methodName, ...args[0] });\n                })\n            });\n        });\n    }\n    async _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        validateBNLike({ gas, amount });\n        const rawResult = await this.account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl\n        });\n        return providers_1.getTransactionLastResult(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/near-api-js/lib/contract.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}}],"sources":{"../node_modules/near-api-js/lib/contract.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                })\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (...args) => {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod({ methodName, ...args[0] });\n                })\n            });\n        });\n    }\n    async _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        validateBNLike({ gas, amount });\n        const rawResult = await this.account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl\n        });\n        return providers_1.getTransactionLastResult(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"},"lineCount":129}},"error":null,"hash":"09c550783a045a10b45f71918543af62","cacheData":{"env":{}}}