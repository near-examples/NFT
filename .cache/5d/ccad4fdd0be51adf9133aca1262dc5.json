{"id":"../node_modules/near-api-js/lib/utils/rpc_errors.js","dependencies":[{"name":"/Users/jelilat/codes/NFT/package.json","includedInParent":true,"mtime":1650815999317},{"name":"/Users/jelilat/codes/NFT/node_modules/near-api-js/package.json","includedInParent":true,"mtime":1649759770555},{"name":"mustache","loc":{"line":7,"column":43},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/rpc_errors.js","resolved":"/Users/jelilat/codes/NFT/node_modules/mustache/mustache.js"},{"name":"../generated/rpc_error_schema.json","loc":{"line":8,"column":56},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/rpc_errors.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/generated/rpc_error_schema.json"},{"name":"../res/error_messages.json","loc":{"line":9,"column":54},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/rpc_errors.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/res/error_messages.json"},{"name":"../common-index","loc":{"line":10,"column":31},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/rpc_errors.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/common-index.js"},{"name":"../utils/errors","loc":{"line":11,"column":25},"parent":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/rpc_errors.js","resolved":"/Users/jelilat/codes/NFT/node_modules/near-api-js/lib/utils/errors.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst mustache_1 = __importDefault(require(\"mustache\"));\nconst rpc_error_schema_json_1 = __importDefault(require(\"../generated/rpc_error_schema.json\"));\nconst error_messages_json_1 = __importDefault(require(\"../res/error_messages.json\"));\nconst common_index_1 = require(\"../common-index\");\nconst errors_1 = require(\"../utils/errors\");\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => common_index_1.utils.format.formatNearAmount(render(n))\n};\nclass ServerError extends errors_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], {\n            ...errorData,\n            ...mustacheHelpers\n        });\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return 'UntypedError';\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/rpc_errors.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}}],"sources":{"../node_modules/near-api-js/lib/utils/rpc_errors.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst mustache_1 = __importDefault(require(\"mustache\"));\nconst rpc_error_schema_json_1 = __importDefault(require(\"../generated/rpc_error_schema.json\"));\nconst error_messages_json_1 = __importDefault(require(\"../res/error_messages.json\"));\nconst common_index_1 = require(\"../common-index\");\nconst errors_1 = require(\"../utils/errors\");\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => common_index_1.utils.format.formatNearAmount(render(n))\n};\nclass ServerError extends errors_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], {\n            ...errorData,\n            ...mustacheHelpers\n        });\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return 'UntypedError';\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n"},"lineCount":123}},"error":null,"hash":"5b31cab4f6713f8766c3fdd24b8d9a4c","cacheData":{"env":{}}}